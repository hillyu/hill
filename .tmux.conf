##############################
#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  < 
#  \__|_| |_| |_|\__,_/_/\_\
#
#############################
#
# COPY AND PASTE
# http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
#
# tmux-256color instead of screen-256color enables italics
#set -g default-terminal "tmux-256color"
set -g default-terminal "screen-256color"
# Tc enables true color
set -ag terminal-overrides ",*256col*:colors=256:Tc"

#set -ag terminal-overrides ",screen-256color:Ms=\\E]52;%p1%s;%p2%s\\7,tmux-256color:Ms=\\E]52;%p1%s;%p2%s\\7"
# following option is the key to enable osc, even you don't use this internal feature (yank.sh instead)
set -g set-clipboard on
set -s escape-time 0
# Use vim keybindings in copy mode
setw -g mode-keys vi
set -g mouse on

# Setup 'v' to begin selection as in Vim
############################################################################
# Clipboard
############################################################################
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "yank.sh"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "yank.sh"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "yank.sh"
#if-shell "echo `uname` |grep Linux" 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i --clipboard"'
#if-shell "echo `uname` |grep Linux" 'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -i --clipboard"'
#if-shell "echo `uname` |grep Linux" 'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -ip && xsel -op|xsel -ib"'
#if-shell "echo `uname` |grep Darwin" 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"'
#if-shell "echo `uname` |grep Darwin" 'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"'
#if-shell "echo `uname` |grep Darwin" 'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"'
############################################################################
############################################################################
# Reset Prefix
############################################################################
#set -g prefix C-w
#bind-key a send-prefix # for nested tmux sessions
unbind-key C-b
set -g prefix 'C-\'
bind-key 'C-\' send-prefix


############################################################################
# Global options
############################################################################
# large history
set-option -g history-limit 10000

# colors

# utf8 support
#set-window-option -g utf8 on


# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on

# Automatically set window title
setw -g automatic-rename

# use mouse # More on mouse support http://floriancrouzat.net/2010/07/run-tmux-with-mouse-support-in-mac-os-x-terminal-app/
#setw -g mode-mouse on
#setw -g mouse-resize-pane on
#set -g mouse-select-window on
#set -g mouse-select-pane on
set -g mouse on
set -g history-limit 30000
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# vi movement keys
# set-option -g status-keys vi

# url-select require tmux-urlselect
bind u run tmux-url-select

############################################################################
# Status Bar
############################################################################
#set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on

# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'


############################################################################
# Unbindings
############################################################################

############################################################################
# Bindings
############################################################################
# reload tmux conf
unbind r
bind-key r source-file ~/.tmux.conf

#bind Escape copy-mode

# new split in current pane (horizontal / vertical)
bind-key -r _ split-window -v # split pane horizontally
bind-key -r |  split-window -h # split pane vertically

# list panes
#bind-key Space list-panes
set -g display-panes-time 2000 
set -g pane-base-index 1

# break-pane
bind-key Enter break-pane

# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
#
#bind C-j command-prompt "joinp"
#bind C-j command-prompt "join-pane"
#bind-key j command-prompt "join-pane -s '%%'"
#bind-key S-Enter command-prompt "joinp -t:0"
bind-key S-Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split


############################################################################
# windows
############################################################################
bind-key \ last-window # C-a C-a for last active window
# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Resizing ---------------------------------------------------------------
bind-key -r C-h resize-pane -L
bind-key -r C-j resize-pane -D
bind-key -r C-k resize-pane -U
bind-key -r C-l resize-pane -R

# use vim motion keys while in copy mode
setw -g mode-keys vi

############################################################################
# layouts
############################################################################


######################
### DESIGN CHANGES ###
######################

# panes

## Status bar design
# status line
set -g status-justify left
set -g status-interval 2

# messaging
set -g message-command-style fg=blue,bg=black

#window mode

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "

# Info on left (I don't have a session display for now)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none


# The modes {
setw -g clock-mode-colour colour135
setw -g mode-style bg=black,bg=colour6,fg=colour0,bold,fg=colour196,bg=colour238

# }
# The panes {

set -g pane-border-style fg=black,bg=colour235,fg=colour238
set -g pane-active-border-style fg=green,fg=brightred,bg=colour236,fg=colour51

# }
# The statusbar {

set -g status-position bottom
set -g status-style bg=black,fg=cyan,bg=default,fg=colour12,bg=colour234,fg=colour137,dim
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style fg=white,reverse,bg=red,bg=colour0,fg=colour11,dim,fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style bg=green,fg=black,reverse,fg=colour138,bg=colour235,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style bold,fg=colour255,bg=colour1

# }
# The messages {

set -g message-style fg=black,bg=yellow,bold,fg=colour232,bg=colour166

# }
