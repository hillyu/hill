# include package shipped configs
include /etc/sway/config.d/*
#Auto start services
xwayland disable
# a hack to load gsettings in config file and apply gsettings manually
exec_always import-gsettings
# import SWAYSOCK env as it is not accessible by systemd user unit (set wall paper etc.) 
# ! already in /etc/sway/config.d/50-systemd-user.conf
# exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
#
# i3ipc to enable dwm like dynamic tiling
exec_always $HOME/src/i3ipc-dynamic-tiling/i3ipc-dynamic-tiling
exec wl-paste -t text --watch clipman store
exec_always fcitx5 -d --replace
#dropbox tray requires x11/xwayland
exec_always nice -12 ~/.dropbox-dist/dropboxd >/dev/null 2>&1 &
exec dbus-update-activation-environment --systemd DISPLAY
#exec --no-startup-id xrdb $HOME/.Xresources && urxvtd -q -f -o &&  urxvtc -name ncmpcpp -e ncmpcpp
#exec --no-startup-id xrdb $HOME/.Xresources 
#exec --no-startup-id LC_CTYPE=zh_CN.UTF-8 emacs --daemon
exec --no-startup-id udiskie  --no-notify
#notification server for sway.
exec bash -c "pkill -f dunst; dunst"
# exec --no-startup-id mako
# exec --no-startup-id mpris-proxy
# use i3ipc dynamic tiling instead
# exec --no-startup-id autotiling
exec mpdmon >/dev/null 2>&1 &
# exec libinput-gestures-setup start >/dev/null 2>&1 &
# exec desk_dash.sh >/dev/null 2>&1 &
#exec_always --no-startup-id blueman-applet
#exec_always --no-startup-id ~/bin/amdClock.sh

# exec  google-chrome-stable --app="https://outlook.office.com/owa/?realm=astri.org&exsvurl=1&ll-cc=4105&modurl=0"
# exec nice -12 slack
# exec google-chrome-stable --app="https://paper.dropbox.com/"
# exec qutebrowser --target window --qt-arg qwindowtitle paper "https://paper.dropbox.com/"
# exec qutebrowser --target window --qt-arg qwindowtitle officemail "https://outlook.office.com/owa/?realm=astri.org&exsvurl=1&ll-cc=4105&modurl=0" 
# output settings
# output eDP-1 res 1366x768 pos 1920,180
#output eDP-1 res 1366x768 pos 0,200
output eDP-1 scale 2 position 0,540 dpms on
# output eDP-2 scale 2 position 0,540 dpms on
output DP-1 pos 1280,0 dpms on
#output DP-1 resolution 1920x1080 position 1366,0 transform 270
#output HDMI-A-2 res 2560x1440 pos 2446,0
# You can get the names of your outputs by running: swaymsg -t get_outputs
#
set $laptop eDP-1
bindswitch --reload lid:on output $laptop disable
bindswitch --reload lid:off output $laptop enable
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
# font pango:SF Pro Display 8.5
font pango:Fixedsys Excelsior MonoLF 8.5
#font pango:SFNS Display 10

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod5
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term "kitty --single-instance"
set $term "alacritty"
# exec $term --class "scratchpad" -e tmux_run.sh
set $ft "$term" --class floating
set $browser qutebrowser
#set $term urxvtc
# Your preferred application launcher
# bindsym Ctrl+Space exec j4-dmenu-desktop --dmenu "dmenu -i " --term "urxvtc"
# bindsym Ctrl+Space exec j4-dmenu-desktop --dmenu "dmenu -i " --term "$term"
#set $menu (cat ; (stest -flx $(echo $PATH | tr : ' ') | sort -u)) | wofi -t \"$term\" -S dmenu -i
# set $menu wofi -t \"$term\" -S drun,run -i -q
set $menu rofi -show combi -m -4
#color workspace name etc.
set $menu-font "SF Pro Display"
#set $menu-font "5x7"
set $base00 #101218
set $frame-color #2e9ef4
set $bg-color            #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935
set $workspace1 "1 "
set $workspace2 "2 "
set $workspace3 "3 "
set $workspace4 "4 "
set $workspace5 "5 "
set $workspace6 "6 "
set $workspace7 "7 "
set $workspace8 "8 "
set $workspace9 "9 "
set $workspace10 "10 "
##
# bindsym Ctrl+Space exec j4-dmenu-desktop --dmenu="(cat ; (stest -flx $(echo $PATH | tr : ' ') | sort -u)) | dmenu -i -fn fixed -nb \\$bg-color -nf \\$text-color -sb \\$text-color -sf \\$bg-color" --term="urxvtc"
#bindsym Ctrl+space exec --no-startup-id "j4-dmenu-desktop --no-generic --dmenu=\\"dmenu -i -fn fixed-12 -nb \\$bg-color -nf \\$text-color -sb \\$text-color -sf \\$bg-color\\" --term=\\"urxvtc\\""
#bindsym Ctrl+Space exec --no-startup-id j4-dmenu-desktop --dmenu="bemenu -i --fn $menu-font -9 --nb \\$bg-color --nf \\$text-color --sb \\$text-color --sf \\$bg-color" --term="$term"
#bindsym Ctrl+Space exec --no-startup-id j4-dmenu-desktop --dmenu="wofi -t \"$term\" -S dmenu -i -q|xargs swaymsg exec --"
#bindsym Ctrl+Space exec --no-startup-id j4-dmenu-desktop --dmenu="$menu" --term=$term
bindsym Ctrl+Space exec --no-startup-id "$menu"
### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/sway/)
output "*" background ~/Pictures/wallpaper/Binary-Code-Wallpaper-05-2560x1600.png fill dpms on
#output * bg /usr/share/sway/Sway_Wallpaper_Blue_1920x1080.png fill

### Input configuration
#
# Example configuration:
#
   #input "2:7:SynPS/2_Synaptics_TouchPad" {
    input "1739:52542:MSFT0001:00_06CB:CD3E_Touchpad" {
       dwt enabled
       tap enabled
       natural_scroll enabled
       middle_emulation enabled
       pointer_accel 0.05
       scroll_factor 0.3
       #accel_profile adaptive

   }
   input "2:10:TPPS/2_IBM_TrackPoint" {
       natural_scroll enabled
       accel_profile flat
   }
   input type:keyboard {           
    xkb_layout us
    xkb_options ctrl:swap_lalt_lctl_lwin,lv3:ralt_switch,caps:escape,lv3:rwin_switch
   }
   input "1452:597:DOT@LOFREE" {
    xkb_layout us
    xkb_options ctrl:swap_lwin_lctl,lv3:ralt_switch,caps:escape,lv3:rwin_switch
}
   input "1452:598:SONiX_USB_DEVICE" {
    xkb_layout us
    xkb_options ctrl:swap_lwin_lctl,lv3:ralt_switch,caps:escape,lv3:rwin_switch
}
   input type:pointer {           
       # pointer_accel -0.75
       accel_profile adaptive
   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
#


### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec --no-startup-id $term
    bindsym $mod+Shift+Return exec --no-startup-id $term -e tmux_run.sh

    # kill focused window
    #bindsym $mod+Shift+q kill
    bindsym Ctrl+q kill

    # start your launcher
    #bindsym Ctrl+Space exec $menu
    # print screen
    #bindsym Print exec --no-startup-id flameshot full -c -p /home/hill/Pictures/screenshot/
    #bindsym Shift+Ctrl+3 exec --no-startup-id flameshot full -c -p /home/hill/Pictures/screenshot/
    #bindsym Shift+Print exec --no-startup-id flameshot gui
    #bindsym Shift+Ctrl+4 exec --no-startup-id flameshot gui
    set $screenshotdir "$(xdg-user-dir PICTURES)/screenshot/$(date +'%Y-%m-%d-%H%M%S_grim.png')"
    bindsym Print exec --no-startup-id grim -o "$(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name')" $screenshotdir && wl-copy < $screenshotdir
    bindsym Shift+Control+3 exec --no-startup-id grim -o "$(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name')" $screenshotdir && wl-copy < $screenshotdir
    bindsym Shift+Print exec --no-startup-id grim -g "$(slurp)" - |swappy -f - -o $screenshotdir
    bindsym Shift+Control+4 exec --no-startup-id grim -g "$(slurp)" - |swappy -f - -o $screenshotdir

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    #floating_modifier $mod normal
    floating_modifier $mod



    # reload the configuration file
    bindsym $mod+Shift+c reload
    bindsym $mod+Shift+s exec --no-startup-id systemctl suspend
    # lock
    bindsym $mod+Shift+l exec --no-startup-id swaylock --color 475263

    # exit sway (logs you out of your wayland session)
    bindsym $mod+Shift+e exit
#
# Moving around:
#
# i3ipc dynamic tiling:
#   # Focus next cycle.
bindsym $mod+j nop i3ipc_focus next

# Move next.
bindsym $mod+shift+j nop i3ipc_move next

# Focus previous cycle.
bindsym $mod+k nop i3ipc_focus prev

# Move previous.
bindsym $mod+shift+k nop i3ipc_move prev
bindsym $mod+Semicolon nop i3ipc_focus toggle
bindsym $mod+space nop i3ipc_move swap

    # Move your focus around
    # bindsym $mod+$left focus left
    # bindsym $mod+$down focus down
    # bindsym $mod+$up focus up
    # bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+$left move left
    # bindsym $mod+Shift+$down move down
    # bindsym $mod+Shift+$up move up
    bindsym $mod+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # move the focused to output (multi-mon)
    bindsym $mod+comma focus output left
    bindsym $mod+period focus output right
    # ditto, with arrow keys
    bindsym $mod+less move output left
    bindsym $mod+greater move output right


  #set $workspace1 = "1:"
  #set $workspace2 = "2:"
  #set $workspace3 = "3:"
  #set $workspace4 = "4:"
  #set $workspace5 = "5:"
  #set $workspace6 = "6:"
  #set $workspace7 = "7:"
  #set $workspace8 = "8:"
  #set $workspace9 = "9:"
  #set $workspace10 = "10:"
#
# Workspaces:
#
    # switch to workspace
    # move focused container to workspace
     bindsym $mod+Shift+1 move container to workspace $workspace1
     bindsym $mod+Shift+2 move container to workspace $workspace2
     bindsym $mod+Shift+3 move container to workspace $workspace3
     bindsym $mod+Shift+4 move container to workspace $workspace4
     bindsym $mod+Shift+5 move container to workspace $workspace5
     bindsym $mod+Shift+6 move container to workspace $workspace6
     bindsym $mod+Shift+7 move container to workspace $workspace7
     bindsym $mod+Shift+8 move container to workspace $workspace8
     bindsym $mod+Shift+9 move container to workspace $workspace9
     bindsym $mod+Shift+0 move container to workspace $workspace10
    #
    # # switch to workspace
     bindsym $mod+1 workspace $workspace1
     bindsym $mod+2 workspace $workspace2
     bindsym $mod+3 workspace $workspace3
     bindsym $mod+4 workspace $workspace4
     bindsym $mod+5 workspace $workspace5
     bindsym $mod+6 workspace $workspace6
     bindsym $mod+7 workspace $workspace7
     bindsym $mod+8 workspace $workspace8
     bindsym $mod+9 workspace $workspace9
     bindsym $mod+0 workspace $workspace10
     # bindsym $mod+, workspace next
     # bindsym $mod+. workspace prev

 #workspace default monitors
 workspace $workspace1 output DP-1
 workspace $workspace2 output DP-1
 workspace $workspace3 output HDMI-A-2
 workspace $workspace4 output DP-1
 workspace $workspace5 output HDMI-A-2
 workspace $workspace6 output DP-1
 workspace $workspace7 output HDMI-A-2
 workspace $workspace8 output HDMI-A-2
 workspace $workspace9 output eDP-1
 workspace $workspace10 output eDP-1

# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#assign [class="(?i)Google-chrome" instance="(?i)google-chrome"]   $workspace1
#assign [class="(?i)qutebrowser"]   $workspace1
#assign [class="(?i)Google-chrome" instance="(?i)paper.dropbox.com"]   $workspace3
#for_window [class="(?i)Google-chrome" instance="(?i)paper.dropbox.com"] move scratchpad
#for_window [title="(?i)paper"]   move scratchpad
assign [class="(?i)Google-chrome" instance="(?i)outlook.office.com__owa"]   $workspace4
#assign [app_id="(?i)firefox"]   $workspace4
assign [class="(?i)Google-chrome" instance="(?i)PowerPoint"]   $workspace3
assign [class="(?i)Google-chrome" instance="(?i)Word"]   $workspace3
#only title works for native wayland window
assign [title="(?i)zathura"]   $workspace3
assign [class="(?i)Google-chrome" instance="(?i)ics-ml-gpu"]   $workspace5
#assign [class="Emacs"]   $workspace5
#assign [class="(?i)Slack"]   $workspace3
#assign [class="(?i)Rhythmbox"]   $workspace10
assign [class="(?i)gimp*"]   $workspace8
assign [class="(?i)inkscape*"]   $workspace8
assign [app_id="(?i)ncmpcpp"]   $workspace10
assign [instance="(?i)ranger"]   $workspace7
assign [class="(?i)Google-chrome" instance="(?i)gitbook.com"]   $workspace3
#assign [class="(?i)Google-chrome" instance="(?i)web.wechat.com"]   $workspace9
#assign [class="(?i)Google-chrome" instance="(?i)kanbanflow.com"]   $workspace6
#assign [class="(?i)Google-chrome" instance="(?i)web.whatsapp.com"]   $workspace9
assign [title="(?i)officemail"]   $workspace2
assign [title="(?i)Teams"]   $workspace2
assign [title="(?i)Jira"]   $workspace4
assign [title="(?i)Confluence"]   $workspace4
assign [app_id="(?i)Brave-browser" title="(?i)dropbox"]   $workspace3
assign [app_id="(?i)Brave-browser" title="(?i)kanbanflow.com"]   $workspace6
# assign [instance="(?i)neomutt"]   $workspace9
# for_window [title="GIMP Startup"]  move workspace $workspace7
## enable tabbed layout on certain window
######## i like my graphic processing tools tabbed
#for_window [class="(?i)gimp*"] layout tabbed
#for_window [class="(?i)inkscape*"] layout tabbed
#for_window [class="(?i)Google-chrome" instance="(?i)web.wechat.com"] floating enable

### enable floating on certain windows
# for_window [class="(?i)mpv"] floating enable
# for_window [title="Launch Application"] floating enable
for_window [app_id="(?i)ncmpcpp"] floating enable; resize set width 750px height 420px
for_window [app_id="(?i)imv"] floating enable
for_window [app_id="(?i)transmission-remote-gtk"] floating enable
for_window [app_id="floating"] floating enable; resize set width 1206px height 666px
for_window [app_id= "(?i)qutebrowser"]  resize set width 55ppt height 100ppt
for_window [app_id="scratchpad"] floating enable; resize set width 1200px height 669px; move scratchpad
for_window [app_id="floatingv"] floating enable; resize set width 620px height 700px
for_window [app_id="(?i)mpv"] floating enable
for_window [app_id="(?i)blueman"] floating enable
for_window [app_id="(?i)pavucontrol"] floating enable
for_window [app_id="(?i)wpa_gui"] floating enable
for_window [app_id="(?)qemu-system-x86_64"] floating enable
for_window [app_id="(?)gvncviewer"] floating enable
for_window [app_id="(?i)firefoxdeveloperedition" title="(?i)Picture-in-Picture"]   floating enable


#for_window [title="(?i)launcher"] floating enable
# for_window [class="(?i)urxvt" instance="(?i)ncmpcpp"] floating enable, move down
# for_window [class="(?i)urxvt" instance="(?i)ranger"] floating enable
# for_window [class="(?i)urxvt" instance="(?i)ranger"] resize
for_window [app_id="(?i)neomutt"] floating enable
for_window [class="(?i)urxvt" instance="(?i)floating"] floating enable
for_window [instance="(?i)urxvt" title="(?i)ideapad*"] floating enable
for_window [class="(?i)wine" instance="(?i)client.exe"] floating enable
for_window [class="(?i)wpa_gui" ] floating enable
for_window [class="(?i)keyring"] floating enable
# for_window [class="(?i)gimp*"] floating disable
##
#assign [title="(?i)Untitled"]   $workspace3
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+shift+b splith
    bindsym $mod+shift+v splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking
    # bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle all

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+space exec sway_swap_con.sh
    bindsym $mod+Shift+f focus mode_toggle

    # move focus to the parent container
    # bindsym $mod+a focus parent
    # # Toggle workspace.
bindsym Ctrl+Tab workspace back_and_forth

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    # bindsym $mod+minus scratchpad show, move position center
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
# mode "resize" {
#     # left will shrink the containers width
#     # right will grow the containers width
#     # up will shrink the containers height
#     # down will grow the containers height
#     bindsym $left resize shrink width 10 px or 10 ppt
#     bindsym $down resize grow height 10 px or 10 ppt
#     bindsym $up resize shrink height 10 px or 10 ppt
#     bindsym $right resize grow width 10 px or 10 ppt

#     # ditto, with arrow keys
#     bindsym Left resize shrink width 10 px or 10 ppt
#     bindsym Down resize grow height 10 px or 10 ppt
#     bindsym Up resize shrink height 10 px or 10 ppt
#     bindsym Right resize grow width 10 px or 10 ppt

#     # return to default mode
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }
# bindsym $mod+r mode "resize"
#also use upper row for shrink
# bindsym $mod+y resize grow width 10 px or 10 ppt
# bindsym $mod+i resize grow height 10 px or 10 ppt
# bindsym $mod+u resize shrink height 10 px or 10 ppt
# bindsym $mod+o resize shrink width 10 px or 10 ppt
bindsym $mod+i resize grow width 10 px or 10 ppt
bindsym $mod+u resize shrink width 10 px or 10 ppt
# window colors
#                       border              background         text                 indicator   child_border
client.focused          $frame-color           $bg-color          $text-color          $frame-color  $frame-color
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color $inactive-bg-color  $bg-color
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color $inactive-bg-color  $bg-color
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          $urgent-bg-color $bg-color

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    #tray_output primary
    # status_command i3blocks -c /home/hill/.config/i3blocks.conf
    swaybar_command waybar
    position top
    colors {
        background $bg-color
        separator #757575
        #                  border             background         text
        focused_workspace  $bg-color          $bg-color          $text-color
        inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
        urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
    }
}
#adjust bar thickness and padding for sway only
# titlebar_border_thickness 1
# titlebar_padding 5 1

# bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl s 4%-
bindsym XF86MonBrightnessDown exec --no-startup-id brightness 1%-
# bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl s +4%
bindsym XF86MonBrightnessUp exec --no-startup-id brightness 1%+
#bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D default -q set $(amixer -D default scontrols| sed -n "s/Simple mixer control '\([A-Za-z ]*\)',0/\1/p"| head -n 1) 2dB+ unmute
#bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D default -q set $(amixer -D default scontrols| sed -n "s/Simple mixer control '\([A-Za-z ]*\)',0/\1/p"| head -n 1) 2dB- unmute
##bindsym XF86AudioRaiseVolume exec amixer -D default -q set PCM 2dB+ unmute
##bindsym XF86AudioLowerVolume exec amixer -D default -q set PCM 2dB- unmute
#bindsym XF86AudioMute exec --no-startup-id amixer -D default -q set $(amixer -D default scontrols| sed -n "s/Simple mixer control '\([A-Za-z ]*\)',0/\1/p"| head -n 1) toggle
# bindsym# change volume or toggle mute
# bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -q -D pulse sset Master 5%+ && pkill -RTMIN+1 i3blocks 
bindsym XF86AudioRaiseVolume exec --no-startup-id volume +5%
# bindsym XF86AudioLowerVolume exec --no-startup-id amixer -q -D pulse sset Master 5%- && pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume exec --no-startup-id volume -5%
# bindsym XF86AudioMute exec --no-startup-id amixer -q -D pulse sset Master toggle && pkill -RTMIN+1 i3blocks 
bindsym XF86AudioMute exec --no-startup-id volume mute
# bindsym XF86AudioMicMute exec --no-startup-id amixer -D default -q set $(amixer -D default scontrols| sed -n "s/Simple mixer control '\([A-Za-z ]*\)',0/\1/p"| grep -E "Mic"| head -n 1) toggle
bindsym XF86AudioMicMute exec --no-startup-id micmute
bindsym XF86Display reload
bindsym XF86Tools reload
bindsym XF86Search output eDP-1 scale 1
bindsym XF86LaunchA gaps inner current minus 4
bindsym XF86Explorer gaps inner current plus  4
bindsym $mod+equal gaps inner current set 0; gaps outer current set 0
#  playback control
bindsym XF86AudioPrev exec mpc prev
bindsym XF86AudioNext exec mpc next
bindsym XF86AudioPlay exec mpc toggle
#quick Launch

bindsym $mod+a exec $ft -e atop
# bindsym Alt+p exec wdisplays
bindsym $mod+w exec $browser
bindsym $mod+Shift+w exec rofi-surfraw
bindsym $mod+s exec $ft --hold -e yay -Syu
bindsym $mod+c exec $ft -e vim .config/sway/config
bindsym $mod+m exec $ft -e neomutt
bindsym $mod+t exec $ft -e tmux_run.sh
bindsym $mod+d exec $ft -e vim -c :VimwikiDiaryIndex
bindsym $mod+r exec $ft -e rtv
bindsym $mod+n exec kitty --class floating --listen-on=unix:/tmp/mykitty -e nnn -ed -P P
bindsym $mod+x exec $ft -e journalctl -xe
bindsym $mod+Shift+x exec $ft -e journalctl -k
bindsym $mod+v exec clipman pick -t rofi
bindsym $mod+b exec papis -s picktool rofi open
# control dunst notification
bindsym Ctrl+grave exec dunstctl history-pop


gaps inner 10
gaps outer 5
#gaps top -5
#gaps bottom -5
#workspace $workspace9 gaps inner 12
#workspace $workspace9 gaps outer 40
#workspace $workspace10 gaps inner 12
#workspace $workspace10 gaps outer 40
default_border pixel
default_floating_border pixel
# disable even the pixel border when there is only one container on tcurrent workspace.
smart_borders on
#If smart_gaps are on then gaps will only be enabled if a workspace has more than one child container.
#smart_gaps on
# floating_maximum_size -1 x -1
# seems not working
# floating_minimum_size 90 x 55
#work_space backandforth
workspace_auto_back_and_forth yes
#exec swayidle timeout 350 "swaylock -c 000000f0" before-sleep "swaylock -c 000000f0"
#include /etc/sway/config.d/*
# mouse_warping container
# popup_during_fullscreen leave_fullscreen
titlebar_border_thickness 0
# focus_follows_mouse on
# mouse_warping output
