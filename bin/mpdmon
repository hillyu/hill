#!/usr/bin/env bash
MPD_HOST=$(tail -n1 $HOME/tmp/MPDHOST)
MPD_HOST=${MPD_HOST:-"/home/hill/.config/mpd/socket"}
# MPD_HOST="192.168.8.229"

IAM=(`pgrep -d " " -f ${0//*\//}`)
[ ${#IAM[@]} -gt 1 ] && { echo I AM running; exit 127; }

cover_path=$HOME/.cache/cover.png
FIRST_RUN=true

function cover_art {
    # parse playlist file method.
    #result=`sed -e 's/xmlns=".*"//g' /home/hill/Music/douban.xspf|xmllint --xpath "$xpath" - `
    # web search method, obselete needs to update the API.
    # QUERY="$artist"
    # API_URL="http://api.douban.com/music/subjects?q=$QUERY" && API_URL=${API_URL//' '/'%20'}
    # echo $API_URL
    # result=`curl -s "$API_URL"`
    # precise=`echo -n "$result"| grep -A 7 "<title>$album</title>"`
    # [ -z $? ] && result="$precise"
    # result=`echo -n "$result"| sed ':a;N;$!ba;s/.*href="\(.*\)" rel="image".*/\1/g' |sed 's/s\/public/l\/public/g'`
    # [ -z "$result" ] && result=`curl -s "$API_URL"| sed ':a;N;$!ba;s/.*href="\(.*\)" rel="image".*/\1/g' |sed 's/s\/public/l\/public/g'`
    # directly read comment tag which contains URL of the album art from douban
    curl -s \
        -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36' \
        $result -o $cover_path
    [ "$FIRST_RUN" == false ] && notify-send -a "mpd" -i "$cover_path" "$title" "\n<b>Artist</b>: <i>$artist</i>\n<b>Album</b>: <u>$album</u>\n" && pkill -8 nwg-wrapper
}

while true; do
    while true; do
        mpc -h $MPD_HOST idle player &>/dev/null && (mpc -h $MPD_HOST status | grep "\[playing\]" )&>/dev/null && break
        mpc -h $MPD_HOST || sleep 30
    done
    FIRST_RUN=false
    title=`mpc -h $MPD_HOST -f "%title%"|head -n1`
    artist=`mpc -h $MPD_HOST -f "%artist%"|head -n1`
    album=`mpc -h $MPD_HOST -f "%album%"|head -n1`
    #xpath='//track[title="'"$title"'"]/image/text()'
    result=`mpc -h $MPD_HOST -f "%comment%"|head -n1`
    #call cover_art function
    cover_art &
    pkill -RTMIN+8 dwmblocks
    pkill -RTMIN+8 waybar
    
done

